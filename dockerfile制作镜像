1.准备安装包

wget https://nodejs.org/download/release/v10.17.0/node-v10.17.0-linux-x64.tar.gz



2.编写dockerfile

vim  Dockerfile

#基础镜像仓库地址
FROM harbor.com/jenkins/jenkins:2.277.4-lts-centos7
#使用root用户运行容器
USER root
#把文件拷贝到容器里面指定的路径(有解压作用)
ADD node-v10.17.0-linux-x64.tar.gz /usr/local/
#把文件拷贝到容器里面指定的路径(无解压作用)
COPY kubectl /usr/bin/kubectl
COPY admin.conf /root/.kube/config
#初始化容器
RUN mv /usr/local/node-v10.17.0-linux-x64 /usr/local/node && yum install -y vim net-tools wget
#指定工作目录，即exec进入容器之后当前所在的目录
WORKDIR /data/app/jenkins
#对外暴露的端口
EXPOSE 8080
#配置系统环境变量
ENV NODE_HOME /usr/local/node/
ENV PATH $NODE_HOME/bin:$PATH
#指定容器启动时需要运行的程序,或命令。
ENTRYPOINT [ "sh", "-c", "/sbin/tini -- /usr/local/bin/jenkins.sh" ]
#CMD ["/usr/local/bin/jenkins.sh"]

3.打包镜像

docker build -t harbor.com/devops/mynew:jenkins-2.277.4-lts-centos7  .



4.运行容器

mkdir -p /home/pzom/devops/jenkins/mynew

docker run --name mynew -p 28888:8080  -v /home/pzom/devops/jenkins/mynew:/var/jenkins_home  -v /var/run/docker.sock:/var/run/docker.sock  -v $(which docker):/usr/bin/docker -d  harbor.com/devops/mynew:jenkins-2.277.4-lts-centos7



--name 指定容器名称

-p 指定端口

-v  数据持久化，挂在服务器的目录到容器里面

-d 后台运行



dockerfile更多参数说明：

FROM
构建镜像基于哪个镜像

MAINTAINER
镜像维护者姓名或邮箱地址

RUN
构建镜像时运行的指令

CMD
运行容器时执行的shell环境

VOLUME
指定容器挂载点到宿主机自动生成的目录或其他容器

USER
为RUN、CMD、和 ENTRYPOINT 执行命令指定运行用户

WORKDIR
为 RUN、CMD、ENTRYPOINT、COPY 和 ADD 设置工作目录，就是切换目录

HEALTHCHECH
健康检查

ARG
构建时指定的一些参数

EXPOSE
声明容器的服务端口（仅仅是声明）

ENV
设置容器环境变量

ADD
拷贝文件或目录到容器中，如果是URL或压缩包便会自动下载或自动解压

COPY
拷贝文件或目录到容器中，跟ADD类似，但不具备自动下载或解压的功能

ENTRYPOINT
运行容器时执行的shell命令
